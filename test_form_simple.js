import { chromium } from 'playwright';
import fs from 'fs';
import path from 'path';

async function testFormSteps() {
    console.log('üöÄ Iniciando teste do formul√°rio multietapas...');
    
    // Criar pasta para screenshots
    const screenshotDir = 'test_screenshots';
    if (!fs.existsSync(screenshotDir)) {
        fs.mkdirSync(screenshotDir);
    }
    
    const browser = await chromium.launch({ 
        headless: false, 
        slowMo: 1000 
    });
    
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // Navegar para a p√°gina de publica√ß√£o
        console.log('üìç Navegando para http://localhost:3000/#publish');
        await page.goto('http://localhost:3000/#publish');
        await page.waitForLoadState('networkidle');
        
        // Aguardar a p√°gina carregar
        await page.waitForTimeout(3000);
        
        // Verificar se a p√°gina carregou corretamente
        const title = await page.title();
        console.log(`üìÑ T√≠tulo da p√°gina: ${title}`);
        
        // Capturar screenshot inicial
        await page.screenshot({ path: 'test_screenshots/01_initial_page.png' });
        console.log('üì∏ Screenshot inicial capturada');
        
        // PASSO 1: Informa√ß√µes B√°sicas
        console.log('\nüìù Testando Passo 1: Informa√ß√µes B√°sicas');
        
        // Verificar se estamos no passo 1
        const step1Indicator = page.locator('text=Passo 1 de 4');
        if (await step1Indicator.isVisible()) {
            console.log('‚úÖ Indicador do Passo 1 encontrado');
        } else {
            console.log('‚ùå Indicador do Passo 1 n√£o encontrado');
        }
        
        // Preencher t√≠tulo
        const tituloInput = page.locator('input[placeholder*="Apartamento"]');
        if (await tituloInput.isVisible()) {
            await tituloInput.fill('Apartamento 3 quartos com vista para o mar');
            console.log('‚úÖ T√≠tulo preenchido');
        } else {
            console.log('‚ùå Campo t√≠tulo n√£o encontrado');
        }
        
        // Preencher descri√ß√£o
        const descricaoTextarea = page.locator('textarea[placeholder*="Descreva"]');
        if (await descricaoTextarea.isVisible()) {
            await descricaoTextarea.fill('Lindo apartamento com 3 quartos, 2 banheiros e vista para o mar.');
            console.log('‚úÖ Descri√ß√£o preenchida');
        } else {
            console.log('‚ùå Campo descri√ß√£o n√£o encontrado');
        }
        
        // Selecionar tipo de im√≥vel
        const tipoSelect = page.locator('select').nth(1); // Segundo select (tipo de im√≥vel)
        if (await tipoSelect.isVisible()) {
            await tipoSelect.selectOption('Apartamento');
            console.log('‚úÖ Tipo de im√≥vel selecionado');
        } else {
            console.log('‚ùå Campo tipo de im√≥vel n√£o encontrado');
        }
        
        // Preencher pre√ßo
        const precoInput = page.locator('input[type="number"][placeholder="0,00"]');
        if (await precoInput.isVisible()) {
            await precoInput.fill('450000');
            console.log('‚úÖ Pre√ßo preenchido');
        } else {
            console.log('‚ùå Campo pre√ßo n√£o encontrado');
        }
        
        // Capturar screenshot do passo 1
        await page.screenshot({ path: 'test_screenshots/02_step1_filled.png' });
        console.log('üì∏ Screenshot do Passo 1 preenchido');
        
        // Clicar no bot√£o "Pr√≥ximo"
        const nextButton = page.locator('button:has-text("Pr√≥ximo")');
        if (await nextButton.isVisible()) {
            await nextButton.click();
            console.log('‚úÖ Bot√£o "Pr√≥ximo" clicado');
            await page.waitForTimeout(2000);
        } else {
            console.log('‚ùå Bot√£o "Pr√≥ximo" n√£o encontrado');
        }
        
        // PASSO 2: Endere√ßo
        console.log('\nüè† Testando Passo 2: Endere√ßo');
        
        // Verificar se estamos no passo 2
        const step2Indicator = page.locator('text=Passo 2 de 4');
        if (await step2Indicator.isVisible()) {
            console.log('‚úÖ Indicador do Passo 2 encontrado');
        } else {
            console.log('‚ùå Indicador do Passo 2 n√£o encontrado');
        }
        
        // Preencher CEP
        const cepInput = page.locator('input[placeholder*="CEP"]');
        if (await cepInput.isVisible()) {
            await cepInput.fill('88010-000');
            console.log('‚úÖ CEP preenchido');
            await page.waitForTimeout(3000); // Aguardar busca do endere√ßo
        } else {
            console.log('‚ùå Campo CEP n√£o encontrado');
        }
        
        // Capturar screenshot do passo 2
        await page.screenshot({ path: 'test_screenshots/03_step2_filled.png' });
        console.log('üì∏ Screenshot do Passo 2 preenchido');
        
        // Clicar no bot√£o "Pr√≥ximo" novamente
        const nextButton2 = page.locator('button:has-text("Pr√≥ximo")');
        if (await nextButton2.isVisible()) {
            await nextButton2.click();
            console.log('‚úÖ Bot√£o "Pr√≥ximo" do Passo 2 clicado');
            await page.waitForTimeout(2000);
        } else {
            console.log('‚ùå Bot√£o "Pr√≥ximo" do Passo 2 n√£o encontrado');
        }
        
        // PASSO 3: Detalhes
        console.log('\nüè° Testando Passo 3: Detalhes');
        
        // Verificar se estamos no passo 3
        const step3Indicator = page.locator('text=Passo 3 de 4');
        if (await step3Indicator.isVisible()) {
            console.log('‚úÖ Indicador do Passo 3 encontrado');
        } else {
            console.log('‚ùå Indicador do Passo 3 n√£o encontrado');
        }
        
        // Preencher quartos
        const quartosInput = page.locator('input[type="number"]').first();
        if (await quartosInput.isVisible()) {
            await quartosInput.fill('3');
            console.log('‚úÖ N√∫mero de quartos preenchido');
        } else {
            console.log('‚ùå Campo quartos n√£o encontrado');
        }
        
        // Preencher banheiros
        const banheirosInput = page.locator('input[type="number"]').nth(1);
        if (await banheirosInput.isVisible()) {
            await banheirosInput.fill('2');
            console.log('‚úÖ N√∫mero de banheiros preenchido');
        } else {
            console.log('‚ùå Campo banheiros n√£o encontrado');
        }
        
        // Marcar algumas caracter√≠sticas
        const checkboxes = page.locator('input[type="checkbox"]');
        const checkboxCount = await checkboxes.count();
        if (checkboxCount > 0) {
            await checkboxes.nth(0).click();
            if (checkboxCount > 1) {
                await checkboxes.nth(1).click();
            }
            console.log(`‚úÖ ${Math.min(2, checkboxCount)} caracter√≠sticas marcadas`);
        } else {
            console.log('‚ùå Checkboxes de caracter√≠sticas n√£o encontrados');
        }
        
        // Capturar screenshot do passo 3
        await page.screenshot({ path: 'test_screenshots/04_step3_filled.png' });
        console.log('üì∏ Screenshot do Passo 3 preenchido');
        
        // Clicar no bot√£o "Pr√≥ximo" para o passo 4
        const nextButton3 = page.locator('button:has-text("Pr√≥ximo")');
        if (await nextButton3.isVisible()) {
            await nextButton3.click();
            console.log('‚úÖ Bot√£o "Pr√≥ximo" do Passo 3 clicado');
            await page.waitForTimeout(2000);
        } else {
            console.log('‚ùå Bot√£o "Pr√≥ximo" do Passo 3 n√£o encontrado');
        }
        
        // PASSO 4: M√≠dias
        console.log('\nüì∏ Testando Passo 4: M√≠dias');
        
        // Verificar se estamos no passo 4
        const step4Indicator = page.locator('text=Passo 4 de 4');
        if (await step4Indicator.isVisible()) {
            console.log('‚úÖ Indicador do Passo 4 encontrado');
        } else {
            console.log('‚ùå Indicador do Passo 4 n√£o encontrado');
        }
        
        // Verificar se o bot√£o de upload est√° presente
        const uploadButton = page.locator('label[for="image-upload"]');
        if (await uploadButton.isVisible()) {
            console.log('‚úÖ Bot√£o de upload de imagens encontrado');
        } else {
            console.log('‚ùå Bot√£o de upload de imagens n√£o encontrado');
        }
        
        // Capturar screenshot final
        await page.screenshot({ path: 'test_screenshots/05_step4_final.png' });
        console.log('üì∏ Screenshot final capturada');
        
        console.log('\nüéØ Teste conclu√≠do!');
        console.log('üìÅ Screenshots salvos na pasta test_screenshots/');
        
    } catch (error) {
        console.log(`‚ùå Erro durante o teste: ${error.message}`);
        await page.screenshot({ path: 'test_screenshots/error.png' });
    } finally {
        await browser.close();
    }
}

// Executar teste
testFormSteps().catch(console.error);